@model TechTree_MVC.Entities.Master.TT_M_Category

@{
    ViewData["Title"] = "Edit";
}

<div class="container mt-5">
    <div class="mt-3 mb-3">
        <a asp-action="Index" class="btn secondary-button btn-sm"><i class="fa-solid fa-circle-chevron-left "><span class="ms-2">Go Back</span></i></a>
    </div>
    <div class="card">
        <h1 class="card-header bg-secondary text-white text-center">EDIT CATEGORY</h1>
        <div class="card-body">
            <form asp-action="Edit" class="needs-validation">
                <div asp-validation-summary="ModelOnly" class="alert alert-danger mb-4"></div>
                <input type="hidden" asp-for="Id" />

                <div class="mb-3">
                    <label asp-for="Title" class="form-label">Category Title</label>
                    <input asp-for="Title" class="form-control" required minlength="2"/>
                    <div class="invalid-feedback">
                        @Html.ValidationMessageFor(model => model.Title)
                    </div>
                </div>

                <div class="mb-3">
                    <label asp-for="Description" class="form-label">Description</label>
                    <input asp-for="Description" class="form-control" required/>
                    <div class="invalid-feedback">
                        @Html.ValidationMessageFor(model => model.Description)
                    </div>
                </div>

                <div class="mb-3">
                    <label asp-for="ThumbnailImagePath" class="form-label">Thumbnail Image Path</label>
                    <input asp-for="ThumbnailImagePath" class="form-control" required/>
                    <div class="invalid-feedback">
                        @Html.ValidationMessageFor(model => model.ThumbnailImagePath)
                    </div>
                </div>

                <div class="d-grid gap-2">
                    <button type="submit" class="btn primary-button"><i class="fa-sharp fa-solid fa-pen-to-square"></i><span class="ms-2">Submit</span></i></button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        (function () {
            'use strict';
            var forms = document.querySelectorAll('.needs-validation');
            Array.from(forms).forEach(function (form) {
                form.addEventListener('submit', function (event) {
                    if (!form.checkValidity()) {
                        event.preventDefault();
                        event.stopPropagation();
                        Swal.fire({
                            title: "Oops...",
                            text: "Invalid input.",
                            icon: "error",
                        });
                    } else {
                        event.preventDefault();
                        displayAlert(form);
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        })();

        function displayAlert(form) {
            Swal.fire({
                title: "Success!",
                text: "Category updated successfully!", // Adjusted text for editing
                icon: "success",
                timer: 3000,
                showConfirmButton: false
            }).then(function () {
                form.submit();
            });
        }
    </script>
}
